name: Metrics Collector

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: read
  issues: write

jobs:
  collect-metrics:
    name: Collect PR Metrics
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Collect Metrics
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const metrics = {
              timestamp: new Date().toISOString(),
              pr_number: pr.number,
              title: pr.title,
              author: pr.user.login,
              files_changed: pr.changed_files,
              lines_added: pr.additions,
              lines_deleted: pr.deletions,
              commits: pr.commits,
              time_to_merge_hours: Math.round((new Date(pr.merged_at) - new Date(pr.created_at)) / (1000 * 60 * 60) * 10) / 10,
              labels: pr.labels.map(l => l.name)
            };

            const comment = `## ðŸ“Š Metrics Collected

            **PR**: #${metrics.pr_number} - ${metrics.title}
            **Author**: @${metrics.author}
            **Merged**: ${metrics.timestamp}

            ### Stats
            - **Time to Merge**: ${metrics.time_to_merge_hours} hours
            - **Files Changed**: ${metrics.files_changed}
            - **Lines**: +${metrics.lines_added} / -${metrics.lines_deleted}
            - **Commits**: ${metrics.commits}
            - **Labels**: ${metrics.labels.join(', ') || 'None'}

            \`\`\`json
            ${JSON.stringify(metrics, null, 2)}
            \`\`\`
            `;

            // Find or create metrics issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'metrics',
              state: 'open'
            });

            if (issues.data.length > 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues.data[0].number,
                body: comment
              });
            }
