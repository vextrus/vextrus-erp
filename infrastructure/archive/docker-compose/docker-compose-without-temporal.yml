version: '3.8'

# Temporary docker-compose without Temporal services
# Use this if Temporal images are failing to pull

services:
  # All services except Temporal
  traefik:
    image: traefik:v3.5
    container_name: vextrus-traefik
    command:
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=vextrus-network"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock:ro
      - ./infrastructure/traefik:/etc/traefik/dynamic:ro
    networks:
      - vextrus-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.middlewares.tenant-headers.headers.customrequestheaders.X-Tenant-ID=default"
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: vextrus-postgres
    environment:
      POSTGRES_USER: vextrus
      POSTGRES_PASSWORD: vextrus_dev_2024
      POSTGRES_DB: vextrus_erp
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vextrus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vextrus -d vextrus_erp"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vextrus-redis
    command: redis-server --appendonly yes --requirepass vextrus_redis_2024
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vextrus-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: vextrus-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - vextrus-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: vextrus-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - vextrus-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9093"]
      interval: 10s
      timeout: 10s
      retries: 5

  # Other essential services continue...
  # Workflow service will run without Temporal (degraded mode)
  workflow:
    build:
      context: .
      dockerfile: ./infrastructure/docker/services/node-service.Dockerfile
      args:
        SERVICE_NAME: "@vextrus/workflow-service"
        SERVICE_PATH: services/workflow
        SERVICE_PORT: 3011
    container_name: vextrus-workflow
    environment:
      NODE_ENV: development
      APP_PORT: 3011
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: vextrus
      DATABASE_PASSWORD: vextrus_dev_2024
      DATABASE_NAME: vextrus_workflow
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: vextrus_redis_2024
      KAFKA_BROKERS: kafka:9093
      # Temporal disabled - service will use fallback queue
      TEMPORAL_ENABLED: "false"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://signoz-otel-collector:4318
      OTEL_SERVICE_NAME: workflow-service
    networks:
      - vextrus-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.workflow.rule=Host(`api.localhost`) && PathPrefix(`/api/workflow`)"
      - "traefik.http.routers.workflow.entrypoints=web"
      - "traefik.http.services.workflow-service.loadbalancer.server.port=3011"
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped

networks:
  vextrus-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data:
  zookeeper_logs: