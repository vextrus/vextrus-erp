apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: vextrus
  labels:
    app: notification-service
    version: v1
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: notification-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: notification
        image: ghcr.io/vextrus/notification-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3003
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: sendgrid-api-key
        - name: ALPHA_SMS_API_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: alpha-sms-api-key
        - name: SMS_NET_BD_API_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: sms-net-bd-api-key
        - name: FCM_SERVER_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: fcm-server-key
        envFrom:
        - configMapRef:
            name: notification-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: templates
          mountPath: /app/templates
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
      - name: templates
        configMap:
          name: notification-templates
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - notification-service
              topologyKey: kubernetes.io/hostname