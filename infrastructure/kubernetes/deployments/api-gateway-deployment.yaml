apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: vextrus
  labels:
    app: api-gateway
    component: backend
    tier: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        component: backend
        tier: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: vextrus/api-gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        - containerPort: 9464
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          value: production
        - name: APP_PORT
          value: "4000"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        # Federation service URLs
        - name: MASTER_DATA_URL
          value: http://master-data-service:3002/graphql
        - name: WORKFLOW_URL
          value: http://workflow-service:3011/graphql
        - name: RULES_ENGINE_URL
          value: http://rules-engine-service:3012/graphql
        - name: AUTH_URL
          value: http://auth-service:3001/graphql
        # OpenTelemetry configuration
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://signoz-otel-collector:4318
        - name: OTEL_SERVICE_NAME
          value: api-gateway
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_METRICS_EXPORTER
          value: otlp
        # Apollo specific
        - name: APOLLO_GRAPH_VARIANT
          value: production
        - name: APOLLO_SCHEMA_REPORTING
          value: "true"
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: api-gateway-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname