version: '3.8'

services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: vextrus-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./infrastructure/docker/signoz/otel-collector-simple.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "8888:8888"     # Prometheus metrics exposed by the collector
      - "8889:8889"     # Prometheus exporter metrics
      - "13133:13133"   # Health check extension
      - "55679:55679"   # zPages extension
    networks:
      - vextrus-network
    depends_on:
      - prometheus

  # Prometheus for metrics storage
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: vextrus-prometheus
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./infrastructure/docker/prometheus/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - vextrus-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: vextrus-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=vextrus_grafana_2024
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,redis-datasource
      - GF_SERVER_ROOT_URL=http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - vextrus-network
    depends_on:
      - prometheus

  # Jaeger for distributed tracing (alternative to SigNoz)
  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: vextrus-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # Jaeger UI
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - vextrus-network

networks:
  vextrus-network:
    external: true

volumes:
  prometheus_data:
  grafana_data: